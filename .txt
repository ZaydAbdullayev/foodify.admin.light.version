product_data
:
"[{\"id\":\"0d6aaa3c\",\"name\":\"tandir lavash\",\"price\":36000,\"img\":\"https://backend.foodify.uz/add/product/img_0d5449ae.jpg\",\"description\":\"pishloqli\",\"restaurant\":\"bd81c3\",\"category\":\"lavash\",\"status\":1,\"department\":\"fast food\",\"quantity\":1}]"

id:"6781c84f"
product_data:"[{\"id\":\"86ae1c6d\",\"name\":\"lavash\",\"price\":30000,\"img\":\"https://backend.foodify.uz/add/product/img_cf663a89.jpg\",\"description\":\"original\",\"restaurant\":\"bd81c3\",\"category\":\"lavash\",\"status\":1,\"department\":\"bar\",\"quantity\":1}]"
receivedAt:"2023-10-11T12:43:03.000Z"
status:1

new update

Settings:

Storages (Add/Edit)
Departments (Add/Edit)
Categories
Ingredients' Groups
Ingredients
Items
Modifiers
Invoice Groups
Suppliers

Operations:

Invoice (Received Goods)
Expenses Invoices (Used Goods)
Seperation Acts (Activity Logs)
Write-offs (Wasted Goods)
Movement (Storage Transfer)
Ingredient Production (Food Production)
Inventory Checkup

Orders:

Pre Order
Monitoring (Food Monitoring)

Financials:

Cashboxes (Money Collection)
Transactions Groups
Transactions
Cashbox Report
import React from 'react';
import ReactDOM from 'react-dom';
import { Area } from '@ant-design/plots';

const DemoArea = () => {
  const monthNames = [
  "Ocak", "Şubat", "Mart",
  "Nisan", "Mayıs", "Haziran", "Temmuz",
  "Ağustos", "Eylül", "Ekim",
  "Kasım", "Aralık"
];
  const config = {
    data: {
      type: 'fetch',
      value: 'https://assets.antv.antgroup.com/g2/stocks.json',
      transform: [{ type: 'filter', callback: (d) => d.symbol === 'GOOG' }],
    },
    xField: (d) => {
      const date = new Date(d.date);
      return `${monthNames[date.getMonth()]} ${date.getFullYear()}`;
    },
    yField: 'price',
    style: {
      fill: 'linear-gradient(-90deg, white 0%, #f27059 100%)',
    },
    axis: {
      y: { labelFormatter: '~' },
    },
    line: {
      style: {
        stroke: '#f25c54',
        strokeWidth: 2,
      },
    },
  };
  return <Area {...config} />;
};

ReactDOM.render(<DemoArea />, document.getElementById('container'));

<--- Last few GCs --->

[12156:000001AFB26BB600]  4875690 ms: Mark-sweep 2071.7 (2130.7) -> 2009.8 (2075.9) MB, 798.0 / 0.0 ms  (average mu = 0.338, current mu = 0.326) allocation failure; GC in old space requested
[12156:000001AFB26BB600]  4876595 ms: Mark-sweep 2012.3 (2075.9) -> 2010.1 (2080.2) MB, 868.8 / 0.0 ms  (average mu = 0.206, current mu = 0.040) allocation failure; scavenge might not succeed


<--- JS stacktrace --->

FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
 1: 00007FF655401C7F node_api_throw_syntax_error+175855
 2: 00007FF655386476 EVP_MD_meth_get_input_blocksize+59654
 3: 00007FF655388160 EVP_MD_meth_get_input_blocksize+67056
 4: 00007FF655E30434 v8::Isolate::ReportExternalAllocationLimitReached+116
 5: 00007FF655E1B7C2 v8::Isolate::Exit+674


zayyad_a@icloud.com
Zxcvbnm-789

